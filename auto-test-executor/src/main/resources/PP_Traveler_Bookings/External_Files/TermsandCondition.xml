<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project id="e01036e4-e7cc-4711-835c-ff289029dd9d" activeEnvironment="Default" name="TermsAndCondition" resourceRoot="" soapui-version="5.4.0" abortOnError="false" runType="SEQUENTIAL" xmlns:con="http://eviware.com/soapui/config"><con:settings/><con:interface xsi:type="con:RestService" id="ca7f0134-ebae-4b61-891d-02ac1c60e35b" wadlVersion="http://wadl.dev.java.net/2009/02" name="TnC" type="rest" definitionUrl="bookings/v1/rt_applied_charges?requested_trip_id=1016713&amp;currency=Rupee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT"/><con:endpoints/><con:resource name="TnC_CMS" path="/api/v4/global_configurations/get_tnc" id="2ad5bec1-0c2d-47b7-ace4-c238cf60ea1e"><con:settings/><con:parameters><con:parameter><con:name>tnc_type</con:name><con:value>${#TestCase#tnc_type}</con:value><con:style>QUERY</con:style><con:default>${#TestCase#tnc_type}</con:default><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>value</con:name><con:value>${#TestCase#value}</con:value><con:style>QUERY</con:style><con:default>${#TestCase#value}</con:default><con:description xsi:nil="true"/></con:parameter><con:parameter required="true"><con:name>security_auth_token</con:name><con:value>ekxnfvoxefmpelbvzuerofqmtcffxxcuwengpdrvwwgrbajkrk</con:value><con:style>QUERY</con:style><con:default>ekxnfvoxefmpelbvzuerofqmtcffxxcuwengpdrvwwgrbajkrk</con:default><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="Method 1" id="931a24bc-f49b-4eb0-98fd-f70596481b60" method="GET"><con:settings/><con:parameters/><con:request name="Request 1" id="090967c6-5005-4671-a6ed-cedb891756af" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://${#TestCase#traveler_apiendpoint}</con:endpoint><con:request/><con:originalUri>https://null///bookings/v1/rt_applied_charges</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="value" value="${#TestCase#value}"/>
  <con:entry key="tnc_type" value="${#TestCase#tnc_type}"/>
  <con:entry key="security_auth_token" value="ekxnfvoxefmpelbvzuerofqmtcffxxcuwengpdrvwwgrbajkrk"/>
</con:parameters><con:parameterOrder><con:entry>tnc_type</con:entry><con:entry>value</con:entry><con:entry>security_auth_token</con:entry></con:parameterOrder></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" id="e1a513f9-1b72-439d-a079-7fd3fe67db08" wadlVersion="http://wadl.dev.java.net/2009/02" name="SignIn" type="rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints/><con:resource name="sign_in" path="/users/sign_in" id="d2bd3329-29fd-41f3-b5fa-56168d6200be"><con:settings/><con:parameters/><con:method name="Method 1" id="3fe57372-68e8-41a4-8923-f48a5db9113a" method="POST"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>text/html; charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Request 1" id="098afb37-2502-414c-bdf6-87b1960632fc" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://${#TestCase#traveler_apiendpoint}</con:endpoint><con:request>{"login_type":"json","user":{"email":"testing1112015a@rediffmail.com","password":"testing00000007"}}</con:request><con:originalUri>https://null///users/sign_in</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource></con:interface><con:testSuite id="b53dc3bb-2b72-4b33-8882-2a888a0ca869" name="FetchingTermsandConditions"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="e9fc6f59-3779-45bd-8cff-6e03865681e8" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TnCTestCase" searchProperties="true"><con:settings/><con:testStep type="calltestcase" name="Given user gets the hash key" id="eb81325b-b8b6-4ea6-a3f1-b599cded371a"><con:settings/><con:config xsi:type="con:RunTestCaseStep" copyHttpSession="true" copyLoadTestProperties="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>e12fb07b-88ae-4971-ac08-72bfd580c9b9</con:targetTestCase><con:properties><con:property><con:name>request_url</con:name><con:value>https://${#TestCase#endpoint}/users/sign_in</con:value></con:property><con:property><con:name>user_email</con:name><con:value>${#TestCase#user_email}</con:value></con:property><con:property><con:name>request_type</con:name><con:value>post</con:value></con:property><con:property><con:name>hash_key</con:name><con:value>CLtif+rkGPg3AQIXO2F9T1l5DcAktw7ZX7tOWWv0ZS8=</con:value></con:property></con:properties><con:returnProperties><con:entry>hash_key</con:entry></con:returnProperties><con:runMode>SINGLETON_AND_WAIT</con:runMode></con:config></con:testStep><con:testStep type="restrequest" name="Then user logged in successfully with correct credentials" id="fd5f3fc3-eca7-4052-ab58-9c78ef541d13"><con:settings/><con:config service="SignIn" resourcePath="/users/sign_in" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Then user logged in successfully with correct credentials" id="098afb37-2502-414c-bdf6-87b1960632fc" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="TT-Mobile" value="${Given user gets the hash key#hash_key}"/>
  &lt;con:entry key="Accept" value="application/json"/>
  &lt;con:entry key="Content-Type" value="application/json; charset=utf-8"/>
&lt;/xml-fragment></con:setting></con:settings><con:endpoint>https://${#TestCase#endpoint}</con:endpoint><con:request>{"login_type":"json","user":{"email":"${#TestCase#user_email}","password":"${#TestCase#user_password}"}}</con:request><con:originalUri>https://null///users/sign_in</con:originalUri><con:assertion type="GroovyScriptAssertion" id="fe62d3b9-3aac-49dc-b952-6c90efafab68" name="Get user details"><con:configuration><scriptText>for(String cookie in messageExchange.getResponseHeaders()["Set-Cookie"]){
	if(cookie.contains("_trips3m_session")){
		messageExchange.modelItem.testCase.setPropertyValue("Cookie",cookie);
	}
}</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" id="0bb6a428-e4f2-4fe3-bacf-5178dee392dc" name="Contains"><con:configuration><token>${#TestCase#user_email}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="46be2cd5-2eb4-4ced-9ce6-b290bb577926" name="Get the response cookie"><con:configuration><scriptText>import groovy.json.JsonSlurper;

String response = messageExchange.getResponseContent();
def json_response_holder = new JsonSlurper().parseText(response);

String user_id = json_response_holder.current_user.id.toString();

String auth_key = json_response_holder.current_user.pubnub_auth.auth_key;

messageExchange.modelItem.testCase.setPropertyValue("user_id",user_id);

messageExchange.modelItem.testCase.setPropertyValue("auth_key",auth_key);</scriptText></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="789feddf-7776-4ea2-9fec-469d9bc7c9fe" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:username>ttuser</con:username><con:password>ttuser</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="calltestcase" name="Get the hash for fetching TnC details" id="3c258c7e-c189-44c2-9296-3bf14ee1778b"><con:settings/><con:config xsi:type="con:RunTestCaseStep" copyHttpSession="true" copyLoadTestProperties="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>e12fb07b-88ae-4971-ac08-72bfd580c9b9</con:targetTestCase><con:properties><con:property><con:name>request_url</con:name><con:value>https://${#TestCase#endpoint}/api/v4/global_configurations/get_tnc?${#TestCase#tnc_type}&amp;${#TestCase#value}</con:value></con:property><con:property><con:name>user_email</con:name><con:value>${#TestCase#user_email}</con:value></con:property><con:property><con:name>request_type</con:name><con:value>get</con:value></con:property><con:property><con:name>hash_key</con:name><con:value>feAO2CiEPGw9LypO04UqO54SZ0NLcW5Tth5cYmDAkGg=</con:value></con:property></con:properties><con:returnProperties><con:entry>hash_key</con:entry></con:returnProperties><con:runMode>SINGLETON_AND_WAIT</con:runMode></con:config></con:testStep><con:testStep type="restrequest" name="Then user is able to fetch TermsCondition" id="440882a7-8918-42f6-84cb-0524ad308865"><con:settings/><con:config service="TnC" resourcePath="/api/v4/global_configurations/get_tnc" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Then user is able to fetch TermsCondition" id="090967c6-5005-4671-a6ed-cedb891756af" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Cookie" value="${#TestCase#Cookie}"/>
  <con:entry key="TT-Mobile" value="${Get the hash for fetching TnC details#hash_key}"/>
  <con:entry key="auth_key" value="${#TestCase#auth_key}"/>
  <con:entry key="Content-Type" value="application/json; charset=UTF-8"/>
  <con:entry key="Accept" value="application/json"/>
</xml-fragment>]]></con:setting></con:settings><con:endpoint>http://${#TestCase#endpoint}</con:endpoint><con:request/><con:originalUri>http://null///bookings/v1/rt_applied_charges</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="ba9161a2-31a9-445f-b44d-12f5380182f0" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="affd8dfd-8975-47b9-9a4d-e7ae6631f5c6" name="FetchTnCfromresponse"><con:configuration><scriptText>import groovy.json.JsonSlurper

String response = messageExchange.getResponseContent();
def jsonHolder = new JsonSlurper().parseText(response);

String tnc = jsonHolder.tnc_details.tnc;
log.info tnc
messageExchange.modelItem.testCase.setPropertyValue("tnc",tnc.toString());</scriptText></con:configuration></con:assertion><con:credentials><con:username>ttuser</con:username><con:password>ttuser</con:password><con:selectedAuthProfile>Basic</con:selectedAuthProfile><con:addedBasicAuthenticationTypes>Basic</con:addedBasicAuthenticationTypes><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="value" value="${#TestCase#value}"/>
  <con:entry key="tnc_type" value="${#TestCase#tnc_type}"/>
  <con:entry key="security_auth_token" value="ekxnfvoxefmpelbvzuerofqmtcffxxcuwengpdrvwwgrbajkrk"/>
</con:parameters><con:parameterOrder><con:entry>tnc_type</con:entry><con:entry>value</con:entry><con:entry>security_auth_token</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>user_email</con:name><con:value>ttprodops@gmail.com</con:value></con:property><con:property><con:name>user_password</con:name><con:value>ttprodops123</con:value></con:property><con:property><con:name>request_id</con:name><con:value>2198071</con:value></con:property><con:property><con:name>endpoint</con:name><con:value>bookings-qa2.ttdev.in</con:value></con:property><con:property><con:name>Cookie</con:name><con:value>_trips3m_session=BAh7CEkiD3Nlc3Npb25faWQGOgZFVEkiJWQwY2UzYWZmYjNjZjNkNjRhMzkxZjU0YmI2OWE0Zjg3BjsAVEkiGXdhcmRlbi51c2VyLnVzZXIua2V5BjsAVFsHWwZpA06VC0kiIiQyYSQxMCRJWDBpRG9HLm5aSWRmR1ptbFNXRC9PBjsAVEkiDHJlZmVyZXIGOwBUSSIABjsAVA%3D%3D--9b0b09cb30d4247c5e43c03b8409b43572baa555; path=/; HttpOnly</con:value></con:property><con:property><con:name>user_id</con:name><con:value>759118</con:value></con:property><con:property><con:name>auth_key</con:name><con:value>a6aaa246c2ab11e788c506086ed274ac</con:value></con:property><con:property><con:name>tnc_type</con:name><con:value>destination_tnc</con:value></con:property><con:property><con:name>value</con:name><con:value>56</con:value></con:property><con:property><con:name>tnc</con:name><con:value>
Driver service during the sightseeing is until 7 pm only
Driver service for late evening excursions (post 7 pm), until and unless already included in the package may be charged extra. Charges will be applicable as per driver rates
High-end cars (Swift Dzire/Etios) are given on subject to availability.
AC may not be provided in hilly areas
AC will only work from 9 PM till 6 AM in AC Delux Houseboat.
Drivers provided are well-known and experienced. The driver has the right to decide driving speed. Any request to drive fast / aggressively is not necessarily to be entertained.
Any issue related to driver can be sorted out on same day, only if notified within proper time frame
We will give similar hotel option in case the hotel is sold out/price issue/contraction/contracting issue/etc.
If there is a Gala dinner in your hotel (on Christmas, New Year or any other important day) then it is mandatory and chargeable from hotelier direct
In case, a cab breaks down then you may need to wait till the issue is sorted out. If it takes more than 2 hrs, then we will refund for sightseeing after receiving verified paid travel receipt.
</con:value></con:property></con:properties></con:testCase><con:properties/></con:testSuite><con:testSuite id="4f950310-8018-4757-bc29-7fdaccc21147" name="ReusableTests" disabled="true"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="e12fb07b-88ae-4971-ac08-72bfd580c9b9" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="CreateToken" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Groovy Script" id="ed761748-9708-42d0-8500-d82158ee53dc"><con:settings/><con:config><script>import java.security.MessageDigest;
import org.codehaus.groovy.runtime.EncodingGroovyMethods;


String requestUrl = context.expand('${#TestCase#request_url}');
String userEmail = context.expand('${#TestCase#user_email}');
String requestType = context.expand('${#TestCase#request_type}');
log.info requestUrl;
String digest;

if( requestType == "get" ){
  	digest = requestUrl; 
} else {
digest = userEmail + requestType;
}

digest = getUserDigest(digest); //this is final digest

log.info digest;
testRunner.testCase.setPropertyValue("hash_key",digest);

String getUserDigest(String digest) {
   String TT_S_KEY = "DAFAC0A55F50A75558B778035E3C9A8BDF03AF1E4C2124D2CD5DD42092EFD32E";
   try {
       digest = TT_S_KEY + digest;
       MessageDigest msgDigest = MessageDigest.getInstance("SHA-256");
       msgDigest.update(digest.getBytes());
       EncodingGroovyMethods encodeObj = new EncodingGroovyMethods();
       //digest = new String(Base64.encode(msgDigest.digest(), Base64.DEFAULT));
       digest = encodeObj.encodeBase64(msgDigest.digest()).toString();
       if (digest.length() > 164) {
           digest = digest.substring(0, 163);
       }
       return digest;
   } catch (Exception e) {
       log.info e.getMessage();
   }
   return null;
}
</script></con:config></con:testStep><con:properties><con:property><con:name>request_url</con:name><con:value>https://bookings-qa2.ttdev.in/api/v4/global_configurations/get_tnc?destination_tnc&amp;56</con:value></con:property><con:property><con:name>user_email</con:name><con:value>ttprodops@gmail.com</con:value></con:property><con:property><con:name>request_type</con:name><con:value>get</con:value></con:property><con:property><con:name>hash_key</con:name><con:value>feAO2CiEPGw9LypO04UqO54SZ0NLcW5Tth5cYmDAkGg=</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:properties/><con:reportParameters/></con:testSuite><con:properties/><con:wssContainer/><con:oAuth2ProfileContainer/><con:oAuth1ProfileContainer/></con:soapui-project>